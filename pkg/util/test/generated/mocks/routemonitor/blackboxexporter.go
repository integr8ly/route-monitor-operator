// Code generated by MockGen. DO NOT EDIT.
// Source: routemonitor_supplement.go

// Package routemonitor is a generated GoMock package.
package routemonitor

import (
	gomock "github.com/golang/mock/gomock"
	blackbox "github.com/openshift/route-monitor-operator/pkg/consts/blackbox"
	reflect "reflect"
)

// MockBlackboxExporter is a mock of BlackboxExporter interface
type MockBlackboxExporter struct {
	ctrl     *gomock.Controller
	recorder *MockBlackboxExporterMockRecorder
}

// MockBlackboxExporterMockRecorder is the mock recorder for MockBlackboxExporter
type MockBlackboxExporterMockRecorder struct {
	mock *MockBlackboxExporter
}

// NewMockBlackboxExporter creates a new mock instance
func NewMockBlackboxExporter(ctrl *gomock.Controller) *MockBlackboxExporter {
	mock := &MockBlackboxExporter{ctrl: ctrl}
	mock.recorder = &MockBlackboxExporterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockBlackboxExporter) EXPECT() *MockBlackboxExporterMockRecorder {
	return m.recorder
}

// EnsureBlackBoxExporterResourcesExist mocks base method
func (m *MockBlackboxExporter) EnsureBlackBoxExporterResourcesExist() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "EnsureBlackBoxExporterResourcesExist")
	ret0, _ := ret[0].(error)
	return ret0
}

// EnsureBlackBoxExporterResourcesExist indicates an expected call of EnsureBlackBoxExporterResourcesExist
func (mr *MockBlackboxExporterMockRecorder) EnsureBlackBoxExporterResourcesExist() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "EnsureBlackBoxExporterResourcesExist", reflect.TypeOf((*MockBlackboxExporter)(nil).EnsureBlackBoxExporterResourcesExist))
}

// EnsureBlackBoxExporterResourcesAbsent mocks base method
func (m *MockBlackboxExporter) EnsureBlackBoxExporterResourcesAbsent() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "EnsureBlackBoxExporterResourcesAbsent")
	ret0, _ := ret[0].(error)
	return ret0
}

// EnsureBlackBoxExporterResourcesAbsent indicates an expected call of EnsureBlackBoxExporterResourcesAbsent
func (mr *MockBlackboxExporterMockRecorder) EnsureBlackBoxExporterResourcesAbsent() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "EnsureBlackBoxExporterResourcesAbsent", reflect.TypeOf((*MockBlackboxExporter)(nil).EnsureBlackBoxExporterResourcesAbsent))
}

// ShouldDeleteBlackBoxExporterResources mocks base method
func (m *MockBlackboxExporter) ShouldDeleteBlackBoxExporterResources() (blackbox.ShouldDeleteBlackBoxExporter, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ShouldDeleteBlackBoxExporterResources")
	ret0, _ := ret[0].(blackbox.ShouldDeleteBlackBoxExporter)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ShouldDeleteBlackBoxExporterResources indicates an expected call of ShouldDeleteBlackBoxExporterResources
func (mr *MockBlackboxExporterMockRecorder) ShouldDeleteBlackBoxExporterResources() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ShouldDeleteBlackBoxExporterResources", reflect.TypeOf((*MockBlackboxExporter)(nil).ShouldDeleteBlackBoxExporterResources))
}
